
version: "3.8"

services:
  # ===============================
  # Backend (FastAPI)
  # ===============================
  backend:
    build: ./backend
    command: uvicorn app.main:app --host 0.0.0.0 --port 5000
    ports:
      - "5000:5000"
    volumes:
      - backend_data:/app/data
    networks:
      - app_network
      - monitoring
    restart: unless-stopped

  # ===============================
  # Frontend
  # ===============================
  frontend:
    build: ./frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app_network
    restart: unless-stopped

  # ===============================
  # Prometheus
  # ===============================
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    networks:
      - monitoring
    restart: always

  # ===============================
  # Node Exporter
  # ===============================
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    networks:
      - monitoring
    restart: always

  # ===============================
  # Grafana
  # ===============================
  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - monitoring
    restart: always
    volumes:
      - grafana_data:/var/lib/grafana

  # ===============================
  # Jenkins
  # ===============================
  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    user: root
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - monitoring
    restart: always

# ===============================
# Volumes
# ===============================
volumes:
  backend_data:
  prometheus_data:
  grafana_data:
  jenkins_data:

# ===============================
# Networks
# ===============================
networks:
  app_network:
    driver: bridge
  monitoring:
    driver: bridge
